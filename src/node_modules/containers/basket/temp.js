import React from 'react'
import {connect} from 'react-redux'
import * as R from 'ramda'
import {Link} from 'react-router'

import {
  getBasketRecipesWhithCount,
  getTotalBasketTime,
  getBasketRecipesId,
  getBasketCheckout
} from 'selectors'

import {
  removeRecipeFromBasket,
  basketCheckout,
  cleanBasket
} from 'actions'

// import './index.css'
import './index.sass'

const Basket = ({
  recipes,
  totalTime,
  recipesId,
  removeRecipeFromBasket,
  basketCheckout,
  cleanBasket,
  recipesCheckout
}) => {
  const isBasketEmpty = R.isEmpty(recipes)
  const renderContent = () => {
    return (
      <div>
        {
          isBasketEmpty && 
          <div className='basket-banner'>
            <span>Your chosen list is empty</span>
          </div>
        }

        {
          R.not(isBasketEmpty) &&
          <div className='basket-info__title'>
            <h4>Chosen list</h4>
          </div>
        }

        {
          R.not(isBasketEmpty) &&
          <div className='basket-info'>
            <div>
              <div className='basket-info__block'>
                {recipes.map((recipe, index) => (
                  <div 
                    className='basket-body'
                    key={index}
                  >
                    <div>
                      <img
                        src={recipe.imageUrlsBySize[90]}
                        alt={recipe.recipeName}
                        className='basket-image'
                      />
                    </div>
                    <div>
                      <Link 
                        to={`/recipes/${recipe.id}`}
                        className='basket-name__link'
                      >
                        {recipe.recipeName}
                      </Link>
                      {/* <span>
                        {recipe.recipeName}
                      </span> */}
                    </div>
                    <div>
                      <span>  {recipe.totalTimeInSeconds/60} min</span>
                    </div>
                    <div className='basket-delete-block'>
                      <span
                        className='basket-delete'
                        onClick={() => removeRecipeFromBasket(recipe.id)}
                      />         
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>
        }

        {
          R.not(isBasketEmpty) &&
          <div className='basket-total-time'>
            <div className='basket-total-time__name'>
              <span>Total time:</span>
            </div>
            <div>
              <span>{totalTime} min</span>
            </div>
          </div>
        }
      </div>
    )
  }

  
  const isBasketCheckoutEmpty = R.isEmpty(recipesCheckout)

  const renderList = (ingredients) => {
    return ingredients.map((value, key) => (
      <div key={key}>
        <div>
          {value}
        </div>
      </div>
    ))
}

  const renderIngredientList = (recipe, index) => {
    // console.log(recipe)
    return (
      <div className='basket-ingredients-list-content' key={index}>
        <div>
            {renderList(recipe.ingredientLines)}
        </div>
      </div>
    )
  }

  const renderSidebar = () => (
    <div className='basket-sidebar'>
      <div className='basket-sidebar-link'>
        <Link 
          className='basket-sidebar-link__home'
          to='/'
        >
          <span>Back to home</span>
        </Link>
      </div>
      {
        R.not(isBasketEmpty) &&
        <div className='basket-sidebar-btn'>
          <button
            onClick={cleanBasket}
            className='basket-sidebar-btn-clear'
          >
            Clear list
          </button>
          <button
            onClick={() => basketCheckout(recipesId)}
            className='basket-sidebar-btn-checkout'
          >
            Checkout
          </button>
        </div>
      }
        
    </div>
  )

  // console.log(recipesCheckout)
  return (
    <div className='basket-container'>
      <div className='basket-section'>
        <div className='basket-row'>
          <div className='basket'>
            <div className='basket-list'>
              {renderContent()}
            </div>
            <div className='basket-ingredients-list'>
              {
                // recipesCheckout.length !== 0 && 
                R.not(isBasketCheckoutEmpty) &&
                <div>
                  <div className='basket-ingredients-list-title'>
                    <h4>All ingredients</h4>
                  </div>
                  {
                    recipesCheckout.map((recipe, index) => renderIngredientList(recipe, index))
                  }
                </div>
                
              }
            </div>
          </div>
          <div>
            {renderSidebar()}
          </div>
        </div>
      </div>
    </div>
  )
}

const mapStateToProps = state => {
  return {
    recipes: getBasketRecipesWhithCount(state),
    totalTime: getTotalBasketTime(state),
    recipesId: getBasketRecipesId(state),
    recipesCheckout: getBasketCheckout(state)
  }
}

const mapDispatchToProps = {
  removeRecipeFromBasket,
  basketCheckout,
  cleanBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Basket)