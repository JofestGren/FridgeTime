import React, {Component} from 'react'
import {connect} from 'react-redux'
import {Link} from 'react-router'

import {
  loadMoreRecipes,
  addRecipeToBasket,
  removeRecipeFromBasket,
} from 'actions'
import {getRecipes, getRecipeInBasket} from 'selectors'

import Banner from 'components/banner'

import './index.sass'

class Recipes extends Component {

  renderBanner () {
    return (
      <div>
        <Banner />
      </div>
    )
  }

  renderIngredientsList (ingredients) {
    const newArr = (list) => {
      let arr = []
      for (let i = 0; i < 5 && i < list.length; i++) {
        arr[i] = list[i]
      }
      return arr
    }

    const newIngredientsList = newArr(ingredients)

    return newIngredientsList.map((value, key) => {
      return (
        <div 
          className='recipes-ingredients__list' 
          key={key}
        >
          <div>{value}</div>
        </div>
      )
    })
  }

  renderRecipe (recipe, index, addBasketBtn) {
    const minutes = recipe.totalTimeInSeconds/60
    let time = 0
    if (minutes > 59 && minutes%60 !== 0) {
      time = `${Math.floor(minutes/60)} hr ${minutes%60} min`
    } else if (minutes > 59 && minutes%60 === 0) {
      time = `${Math.floor(minutes/60)} hr`
    } else {
      time = `${minutes} min`
    }
    return (
      <div className='recipes-block' key={index}>
        <div className='recipes-block__info'>
          <div className='recipes-title'>
            <h4 className='recipes-title__link'>
              <Link 
                to={`/recipes/${recipe.id}`}
                className='recipes-link'
              >
                {recipe.recipeName}
              </Link>
            </h4>
          </div>
          <div className='recipes-body'>
            <div className='recipes-info'>
              <div>
                <img
                  src={recipe.imageUrlsBySize[90]}
                  alt={recipe.recipeName}
                  className='recipes-image'
                />
              </div>
              <div className='recipes-ingredients'>
                <h4
                  className='recipes-ingredients__title'
                >
                  Ingredients
                </h4>
                {this.renderIngredientsList(recipe.ingredients)}
                <div className='recipes-ingredients__more'>
                  <p>...</p>
                </div>
              </div>
            </div>
            <div className='recipes-category'>
              {
                recipe.attributes.course &&
                <div className='recipes-category__list'>
                  <h4 className='recipes-category__title'>Course</h4>
                  <span>
                      {recipe.attributes.course.map((value, index) => (
                        <div key={index} className='category-list__element'>
                          <span>{value}</span>
                        </div>
                      ))}
                    </span>
                </div>
              }
              {
                recipe.attributes.cuisine &&
                <div className='recipes-category__list'>
                  <h4 className='recipes-category__title'>Cuisine</h4>
                  <span>
                      {recipe.attributes.cuisine.map((value, index) => (
                        <div key={index} className='category-list__element'>
                          <span>{value}</span>
                        </div>
                      ))}
                    </span>
                </div>
              }
            </div>
            <div className='recipes-time'>
              <div className='recipes-time__item'>
                <span>Cooking time: </span>
              </div>
              <div className='recipes-time__item'>
                <span>
                  {time}
                </span>
              </div>
            </div>
          </div>
        </div>
        <div className='item-button'>
          {addBasketBtn[recipe.id]}
          <Link 
            to={`/recipes/${recipe.id}`}
            className='recipes-btn recipes-btn--moreInfo'
          >
            More info
          </Link>
        </div>
      </div>
    )
  }

  renderLoadMore (loadMoreRecipes) {
    return (
      <div className='recipes-loadmore__item'>
        <button 
          onClick={loadMoreRecipes}
          className='loadmore-btn'
        >
          Load more
        </button>
      </div>
    )
  }

  render () {
    const {
      recipes, 
      loadMoreRecipes,
      addRecipeToBasket, 
      removeRecipeFromBasket, 
      isRecipeInBasket,
    } = this.props

    let addBasketBtn = {}

    recipes.forEach(recipeInResipes => {
      addBasketBtn[recipeInResipes.id] = <button 
        className='recipes-btn recipes-btn--addToBasket'
        onClick={() => addRecipeToBasket(recipeInResipes.id) }
      >
        Add to basket
      </button>

      isRecipeInBasket.forEach(element => {
        if (recipeInResipes.id === element) {
          addBasketBtn[recipeInResipes.id] = <button 
            className='recipes-btn recipes-btn--addToBasket--active'
            onClick={() => removeRecipeFromBasket(recipeInResipes.id) }
          >
            Add to basket
          </button>
        } 
      })
    })

    return (
      <div className='recipes-content'>
        <div className='recipes-list'>
        {
          recipes.length !== 0 ?
          recipes.map((recipe, index) => this.renderRecipe(recipe, index, addBasketBtn)) :
          this.renderBanner()
        }
        </div>
        <div className='recipes-loadmore'>
          {recipes.length !== 0 && this.renderLoadMore(loadMoreRecipes)}
        </div>
      </div>
    )
  }
}

const mapStateToProps = state => {
  return {
    recipes: getRecipes(state),
    isRecipeInBasket: getRecipeInBasket(state)
  }
}

const mapDispatchToProps = {
  loadMoreRecipes,
  addRecipeToBasket,
  removeRecipeFromBasket
}

export default connect(mapStateToProps, mapDispatchToProps)(Recipes)